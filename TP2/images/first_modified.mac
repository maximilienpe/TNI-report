ClearScreen ();

REAL rPairs[,];
rPairs = GetAutoThreshold(ArROIHistogram,6,2,,ActiveLuminanceRange,);
if ( rPairs && 1 < GetShape(rPairs)[0] )
   {
// sucessful autothreshold

// set threshold
		Threshold(rPairs[1,0]:rPairs[1,1]);

// alternative which works even for color
	GrayToBinary(,rPairs[1,0],rPairs[1,1]);
}

LineCNVFactors[0..6] = 0.0 : 1.0 : -1.0 : 256.0 : 0.0 : 3.0;

REAL x1search = 0.000;
REAL y1search = 0.000;
REAL x2search = 375.000;
REAL y2search = 0.000;

CreateLine(x1search : y1search :: x2search : y2search);
DataCollection (0);
SetExport (mLnLength, optExtractFlag, TRUE);
SetExport (LnLength, optExtractFlag, TRUE);
SetExport (mLnLuminance, optExtractFlag, TRUE);
SetExport (LnLuminance, optExtractFlag, TRUE);
MultipleExtract (TRUE);
CloseWindow ("Measurement Explorer");

INTEGER bool_start = 0;
INTEGER xstart = 0;
INTEGER ystart = 0;

while(bool_start == 0) 
{
	INTEGER i = 0;
	for(i=0 ; i < 255 ; i++) 
	{
		if ( mLnLuminance[0,i] == 255 ) 
		{
			ystart = ysearch;
			xstart = (375/256)*i;
			bool_start = 1;
		{
	}
	show(y1search);
	y1search = y1search + 0.100;
	y2search = y2search + 0.100;
	ClearScreen ();

	CreateLine(x1search : y1search :: x2seach : y2search);
	DataCollection (0);
	SetExport (mLnLength, optExtractFlag, TRUE);
	SetExport (LnLength, optExtractFlag, TRUE);
	SetExport (mLnLuminance, optExtractFlag, TRUE);
	SetExport (LnLuminance, optExtractFlag, TRUE);
	MultipleExtract (TRUE);
	CloseWindow ("Measurement Explorer");
}



REAL Longu = 256;
REAL xmin = 10.000;
REAL xmax = 18.000;
REAL ymin = 9.200;
REAL ymax = 11.250;

REAL y = ymin;
INTEGER nbligne = 0;

while(y <= ymax) 
{
	CreateLine(xmin : y :: xmax : y);
	y = y + 0.100;
	nbligne = nbligne +1;
}

MultipleExtract (TRUE);


INTEGER nbligne_correctes = 0;
for (i=0; i<nbligne ; i++) 
{
	INTEGER nbbroche = 0;
	INTEGER nv_gris = 0;
	for (k=0; k<Longu ; k++) 
	{
			if (nv_gris == 0 && mLnLuminance[i,k] > 0)
			{
				nbbroche++;
			}
			nv_gris = mLnLuminance[i,k];
	}
	if (nbbroche == 20) 
	{
		nbligne_correctes++;
	}
}

if( (nbligne_correctes/nbligne)*100 < 95 ) 
{
	show("Mauvais :-(");
}
else 
{
	show("Bon :-)");
}